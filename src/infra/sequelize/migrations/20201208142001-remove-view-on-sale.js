'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.sequelize.query(`DROP VIEW vehiclesOnSale`);
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.sequelize.query(
      'CREATE OR REPLACE VIEW `vehiclesOnSale` AS select `vehicles`.`id` AS `id`,`vehicles`.`uuid` AS `uuid`,`vehicles`.`fileNumber` AS `fileNumber`,`vehicles`.`purchaseDate` AS `purchaseDate`,`vehicles`.`statusId` AS `statusId`,`vehicles`.`offerType` AS `offerType`,`vehicles`.`salesComment` AS `salesComment`,`vehicles`.`salesCommentInt` AS `salesCommentInt`,`vehicles`.`brandLabel` AS `brandLabel`,`vehicles`.`modelLabel` AS `modelLabel`,`vehicles`.`versionLabel` AS `versionLabel`,`vehicles`.`firstRegistrationDate` AS `firstRegistrationDate`,`vehicles`.`profileBodyCosts` AS `profileBodyCosts`,`vehicles`.`carPictures` AS `carPictures`,`vehicles`.`pointOfSaleId` AS `pointOfSaleId`,`vehicles`.`keyPoints` AS `keyPoints`,`vehicles`.`documents` AS `documents`,`vehicles`.`declaredEquipments` AS `declaredEquipments`,`vehicles`.`constructorEquipments` AS `constructorEquipments`,`vehicles`.`mileage` AS `mileage`,`vehicles`.`fuelLabel` AS `fuelLabel`,`vehicles`.`liter` AS `liter`,`vehicles`.`gearBoxLabel` AS `gearBoxLabel`,`vehicles`.`seats` AS `seats`,`vehicles`.`door` AS `door`,`vehicles`.`ch` AS `ch`,`vehicles`.`kw` AS `kw`,`vehicles`.`fiscal` AS `fiscal`,`vehicles`.`wheelsFrontDimensions` AS `wheelsFrontDimensions`,`vehicles`.`wheelsBackDimensions` AS `wheelsBackDimensions`,`vehicles`.`wheelsFrontTireBrand` AS `wheelsFrontTireBrand`,`vehicles`.`wheelsBackTireBrand` AS `wheelsBackTireBrand`,`vehicles`.`rimTypeFront` AS `rimTypeFront`,`vehicles`.`rimTypeBack` AS `rimTypeBack`, `vehicles`.`metallic` AS `metallic`, `vehicles`.`gcDate` AS `gcDate`, `vehicles`.`firstHand` AS `firstHand`, `vehicles`.`vehicleType` AS `vehicleType`, `vehicles`.`co2` AS `co2`, `vehicles`.`origin` AS `origin`, `vehicles`.`servicingHistory` AS `servicingHistory`, `vehicles`.`nextTechnicalCheckDate` AS `nextTechnicalCheckDate`, `vehicles`.`lastServicingDate` AS `lastServicingDate`, `vehicles`.`lastServicingKm` AS `lastServicingKm`, `vehicles`.`servicingInBrandNetwork` AS `servicingInBrandNetwork`, `vehicles`.`purchaseInvoice` AS `purchaseInvoice`, `vehicles`.`servicingManualPicture` AS `servicingManualPicture`, `vehicles`.`servicingInvoices` AS `servicingInvoices`, `vehicles`.`distributionBelt` AS `distributionBelt`, `vehicles`.`vat` AS `vat`, `vehicles`.`marketLink` AS `marketLink`, `vehicles`.`b2cMarketValue` AS `b2cMarketValue`, `vehicles`.`standardMileage` AS `standardMileage`, `vehicles`.`userId` AS `userId`, `vehicles`.`createdAt` AS `createdAt`, `vehicles`.`updatedAt` AS `updatedAt`, `vehicles`.`deletedAt` AS `deletedAt`, `vehicles`.`damages` AS `damages`, `vehicles`.`userManual` AS `userManual`, `vehicles`.`secondSetKey` AS `secondSetKey`, `vehicles`.`imported` AS `imported`, `vehicles`.`dpaProAmt` AS `dpaProAmt`, `vehicles`.`salesSpeedName` AS `salesSpeedName`, `vehicles`.`ownerId` AS `ownerId`, `vehicles`.`groupId` AS `groupId`, `vehicles`.`listId` AS `listId` from (`vehicles` left join `sales` on (`sales`.`vehicleId` = `vehicles`.`id`)) where `vehicles`.`deletedAt` is null and (`vehicles`.`statusId` = 2 or `vehicles`.`statusId` = 3) and `sales`.`endDateTime` > current_timestamp() - interval 24 hour and `sales`.`startDateTime` < current_timestamp() and `vehicles`.`active` = 1 and `vehicles`.`offerType` is not null',
    );
  },
};
